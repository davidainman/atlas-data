# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
atlasdata <- atlasdata[, -grep("-\\d+(a|b|c|d|e|f|g|h)$", colnames(atlasdata))]
atlasdata <- atlasdata %>% select(-names(atlasdata)[apply(atlasdata, 2, function(x) any(grepl(";;", x)))])
ncol(atlasdata)
ncol(atlasdata[, colSums(atlasdata=="NA", na.rm=TRUE) < 3 * 325/4])
atlasdata <- atlasdata[, colSums(atlasdata=="NA", na.rm=TRUE) < 3 * 325/4]
row.names.remove <- c("pira1253")
atlasdata <- atlasdata[!(row.names(atlasdata) %in% row.names.remove), ]
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=9)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlasdata <- convertToWide(valuescsv)
atlasdata[atlasdata=="?"] <- NA
rownames(atlasdata) <- atlasdata$LanguageID
atlasdata[,1] <- NULL
# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
atlasdata <- atlasdata %>% select(-names(atlasdata)[apply(atlasdata, 2, function(x) any(grepl(";;", x)))])
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=9)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlasdata <- convertToWide(valuescsv)
atlasdata[atlasdata=="?"] <- NA
rownames(atlasdata) <- atlasdata$LanguageID
atlasdata[,1] <- NULL
# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
# remove derived features
atlasdata <- atlasdata %>% select(-names(atlasdata)[apply(atlasdata, 2, function(x) any(grepl(";;", x)))])
row.names.remove <- c("pira1253")
atlasdata <- atlasdata[!(row.names(atlasdata) %in% row.names.remove), ]
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=9)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
ggsave("atlas_famd.png", plot = atlas.rgbmap, width = 9, height = 8, dpi = 500)
atlasdata.renamed <- atlasdata
atlasdata.renamed$Glottocode <- rownames(atlasdata.renamed)
atlasdata.renamed <- merge(atlasdata.renamed, languagescsv, by.x = "Glottocode", by.y="Glottocode")
rownames(atlasdata.renamed) <- atlasdata.renamed$Name
atlasdata.renamed <- atlasdata.renamed %>% select(-names(languagescsv))
gower.dist <- daisy(atlasdata.renamed[ , 1:length(names(atlasdata.renamed))], metric = c("gower"))
aggl.clust.c <- hclust(gower.dist, method = "complete")
plot(aggl.clust.c, main = "Agglomerative, complete linkages")
ggplot(data = data.frame(t(cstats.table(gower.dist, aggl.clust.c, 20))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(gower.dist, aggl.clust.c, 20))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
clusters <- cutree(aggl.clust.c, 6)
atlasdata.renamed$clusters <- clusters
atlasdata.renamed$clusters <- ifelse(atlasdata.renamed$clusters == 1, "brown2",
ifelse(atlasdata.renamed$clusters == 2, "orange",
ifelse(atlasdata.renamed$clusters == 3, "yellow",
ifelse(atlasdata.renamed$clusters == 4, "springgreen",
ifelse(atlasdata.renamed$clusters == 5, "#1A2CEB", "#874AFC")))))
# add back lat/lon
atlasdata.renamed$Name <- rownames(atlasdata.renamed)
atlasdata.renamed <- merge(atlasdata.renamed, languagescsv, by.x = "Name", by.y="Name")
toremove <- names(languagescsv)
toremove <- toremove[!toremove %in% c("lat", "lon", "Glottocode")]
atlasdata.renamed <- atlasdata.renamed %>% select(-toremove)
rgb_shifted <- project_data(df = atlasdata.renamed, world_map_initial = world_map_initial)
pacific_centered_map <- rgb_shifted$base_plot +
geom_sf(data = rgb_shifted$data, aes(fill = clusters, color = clusters), shape = 21, size = 1.5) +
labs(title = "Hierarchical clustering k=6") +
theme_minimal() +
scale_fill_identity() +  # use color values as specified in the data
scale_color_identity() +  # use color values as specified in the data
guides(fill = "none", color = "none")+
theme(panel.grid.major = element_blank(), plot.title = element_text(hjust = 0.5),
axis.text = element_blank(),axis.ticks = element_blank())
pacific_centered_map
dendro <- as.dendrogram(aggl.clust.c)
dendro.col <- dendro %>%
set("branches_k_color", k = 6, value=c("brown2", "orange", "yellow", "springgreen", "#1A2CEB", "#874AFC")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("black")) %>%
set("labels_cex", 0.3)
ggd1 <- as.ggdend(dendro.col)
ggp <- ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6") +
theme_void()
ggp
divisive.clust <- diana(as.matrix(gower.dist), diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")
geom_point()+
geom_line()+
ggtitle("Divisive clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(gower.dist, divisive.clust, 20))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Divisive clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(gower.dist, divisive.clust, 20))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Divisive clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
dendro <- as.dendrogram(aggl.clust.c)
dendro.col <- dendro %>%
set("branches_k_color", k = 6) %>% #, value=c("brown2", "orange", "yellow", "springgreen", "#1A2CEB", "#874AFC")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("black")) %>%
set("labels_cex", 0.3)
ggd1 <- as.ggdend(dendro.col)
ggp <- ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6") +
theme_void()
ggp
dendro <- as.dendrogram(aggl.clust.c)
dendro.col <- dendro %>%
set("branches_k_color", k = 15) %>% #, value=c("brown2", "orange", "yellow", "springgreen", "#1A2CEB", "#874AFC")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("black")) %>%
set("labels_cex", 0.3)
ggd1 <- as.ggdend(dendro.col)
ggp <- ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6") +
theme_void()
ggp
dendro <- as.dendrogram(aggl.clust.c)
dendro.col <- dendro %>%
set("branches_k_color", k = 20) %>% #, value=c("brown2", "orange", "yellow", "springgreen", "#1A2CEB", "#874AFC")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("black")) %>%
set("labels_cex", 0.3)
ggd1 <- as.ggdend(dendro.col)
ggp <- ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6") +
theme_void()
ggp
ggp
dendro <- as.dendrogram(aggl.clust.c)
dendro.col <- dendro %>%
set("branches_k_color", k = 6) %>% #, value=c("brown2", "orange", "yellow", "springgreen", "#1A2CEB", "#874AFC")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("black")) %>%
set("labels_cex", 0.3)
ggd1 <- as.ggdend(dendro.col)
ggp <- ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6") +
theme_void()
ggp
atlas.gray <- grayscale_mapping(atlasdata.famd, languagescsv) %>% na.omit()
atlas.graymap1 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 1, famd.object = atlasdata.famd)
atlas.graymap2 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 2, famd.object = atlasdata.famd)
atlas.graymap3 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 3, famd.object = atlasdata.famd)
atlas.graymap4 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 4, famd.object = atlasdata.famd)
atlas.graymap5 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 5, famd.object = atlasdata.famd)
atlas.graymap6 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 6, famd.object = atlasdata.famd)
atlas.graymap7 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 7, famd.object = atlasdata.famd)
atlas.graymap8 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 8, famd.object = atlasdata.famd)
atlas.graymap9 <- gray_map(atlas.gray, world_map_initial, main="ATLAs FAMD", plot=F, size = 1.2, dim = 9, famd.object = atlasdata.famd)
atlas.graymap1
atlas.graymap2
atlas.graymap3
atlas.graymap4
atlas.graymap5
atlas.graymap6
get_famd_var(atlasdata.famd)
get_famd_var(atlasdata.famd)$contrib
View(get_famd_var(atlasdata.famd)$contrib)
atlasdata <- convertToWide(valuescsv)
atlasdata[atlasdata=="?"] <- NA
rownames(atlasdata) <- atlasdata$LanguageID
atlasdata[,1] <- NULL
# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
select(atlasdata, -c("Appr.12a"))
atlasdata <- convertToWide(valuescsv)
atlasdata[atlasdata=="?"] <- NA
rownames(atlasdata) <- atlasdata$LanguageID
atlasdata[,1] <- NULL
# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
select(atlasdata, -c("Appr-12a"))
parameterscsv <- read.csv("~/Documents/GitHub/ooa-processing/cldf/parameters.csv", na.strings = c(), colClasses = c("character"), stringsAsFactors = FALSE)
parameterscsv
parameterscsv$datatype
unique(parameterscsv$datatype)
parameterscsv$ParameterID[parameterscsv$datatype != '"single-valued"']
nonsinglevalued <- parameterscsv$ParameterID[parameterscsv$datatype != '"single-valued"']
toremove + c("Cor-01a")
c(toremove, "Cor-01a")
toremove
toremove <- parameterscsv$ParameterID[parameterscsv$datatype != '"single-valued"']
toremove
c(toremove, "Cor-01a")
toremove
toremove <- parameterscsv$ParameterID[parameterscsv$datatype != '"single-valued"']
atlasdata <- select(atlasdata, -toremove)
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=9)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
row.names.remove <- c("pira1253")
atlasdata <- atlasdata[!(row.names(atlasdata) %in% row.names.remove), ]
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=9)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
ncol(atlasdata[, colSums(atlasdata=="NA", na.rm=TRUE) < 3 * 325/4])
ncol(atlasdata)
atlasdata <- atlasdata[, colSums(atlasdata=="NA", na.rm=TRUE) < 3 * 325/4]
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=9)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
unique(atlasdata$`Ppron-001`)
unique(atlasdata$`Ppron-01`)
unique(atlasdata$`Ppron-02`)
unique(atlasdata$`Ppron-03`)
atlasdata <- convertToWide(valuescsv)
atlasdata[atlasdata=="?"] <- NA
rownames(atlasdata) <- atlasdata$LanguageID
atlasdata[,1] <- NULL
# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
# removes features that are not single-valued
toremove <- parameterscsv$ParameterID[parameterscsv$datatype != '"single-valued"']
atlasdata <- select(atlasdata, -toremove)
atlasdata <- atlasdata[, colSums(atlasdata=="NA", na.rm=TRUE) < 3 * 325/4]
atlasdata[atlasdata=="NA"] <- NA
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
atlasdata <- convertToWide(valuescsv)
atlasdata[atlasdata=="?"] <- NA
rownames(atlasdata) <- atlasdata$LanguageID
atlasdata[,1] <- NULL
# remove non-data columns
atlasdata <- atlasdata %>%
select(-contains(c(".Coder",".Frequency",".Remark",".Source")))
# removes features that are not single-valued
toremove <- parameterscsv$ParameterID[parameterscsv$datatype != '"single-valued"']
atlasdata <- select(atlasdata, -toremove)
# remove derived features
# atlasdata <- atlasdata[, -grep("-\\d+(a|b|c|d|e|f|g|h)$", colnames(atlasdata))]
# remove columns with multiple values
# atlasdata <- atlasdata %>% select(-names(atlasdata)[apply(atlasdata, 2, function(x) any(grepl(";;", x)))])
# remove all dependent features with less than 1/4 of filled in data
atlasdata <- atlasdata[, colSums(atlasdata=="NA", na.rm=TRUE) < 3 * 325/4]
# turn NA into missing data
atlasdata[atlasdata=="NA"] <- NA
# remove Piraha -- necessary for maps
# row.names.remove <- c("pira1253")
# atlasdata <- atlasdata[!(row.names(atlasdata) %in% row.names.remove), ]
# make into factors
atlasdata[] <- lapply(atlasdata, factor)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9, maxiter = 9)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=3, maxiter = 9)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=3, maxiter = 100000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9, maxiter = 100000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=6, maxiter = 100000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=3, maxiter = 100000)
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=3)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9, maxiter = 10000000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=9, maxiter = 1000000000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=4, maxiter = 100000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=4, maxiter = 1000000)
atlasdata.impute <- imputeFAMD(atlasdata, ncp=3, maxiter = 1000000)
# do FAMD
atlasdata.famd <- FAMD(atlasdata, tab.disj = atlasdata.impute$tab.disj, graph=FALSE, ncp=3)
# plot(atlasdata.famd, choix="ind", axes=c(1,2), lab.var=TRUE)
fviz_famd_ind(atlasdata.famd, col.ind = "cos2",
label=c("ind"), labelsize=3, arrowsize=0,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)
RGB_mapping <- function(famd.object, taxonomy_matrix, pc1flip=F, pc2flip=F, pc3flip=F) {
library(scales)
gg <- as.data.frame(taxonomy_matrix)[ , c('Glottocode','lat', 'lon')]
df <- data.frame(get_famd(famd.object)$coord, level1=rownames(get_famd(famd.object)$coord))
# map PCs to RGB:
if(pc1flip){
pcrange <- range(df$Dim.1)
pcmid <- mean(pcrange)
pcflip <- df$Dim.1-2*(df$Dim.1-pcmid)
df$Dim.1 <- pcflip
}
if(pc2flip){
pcrange <- range(df$Dim.2)
pcmid <- mean(pcrange)
pcflip <- df$Dim.2-2*(df$Dim.2-pcmid)
df$Dim.2 <- pcflip
}
if(pc3flip){
pcrange <- range(df$Dim.3)
pcmid <- mean(pcrange)
pcflip <- df$Dim.3-2*(df$Dim.3-pcmid)
df$Dim.3 <- pcflip
}
df$pc.colors1to3 <- with(df, rgb(red=rescale_mid(Dim.1),
green=rescale_mid(Dim.2),
blue=rescale_mid(Dim.3), alpha=0.8))
# df$pc.colors4to6 <- with(df, rgb(red=rescale_mid(Dim.4),
#                                  green=rescale_mid(Dim.5),
#                                  blue=rescale_mid(Dim.6), alpha=0.8))
# df$pc.colors7to9 <- with(df, rgb(red=rescale_mid(Dim.7),
#                                  green=rescale_mid(Dim.8),
#                                  blue=rescale_mid(Dim.9), alpha=0.8))
geo <- subset(gg, gg[,1] %in% df$level1)
geo.world <- merge(df,
geo, by.x='level1', by.y=names(gg)[1])
return(geo.world)
}
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgb
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = F, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = T, pc2flip = T, pc3flip = T) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 3, famd.object = atlasdata.famd)
atlas.rgbmap
atlas.rgb <- RGB_mapping(atlasdata.famd, languagescsv, pc1flip = F, pc2flip = T, pc3flip = F) %>% na.omit()
atlas.rgbmap <- rgb_map(atlas.rgb, world_map_initial, main="ATLAs FAMD", plot=F, size = 2, famd.object = atlasdata.famd)
atlas.rgbmap
ggsave("atlas_famd-singlevaluedonly.png", plot = atlas.rgbmap, width = 9, height = 8, dpi = 500)
